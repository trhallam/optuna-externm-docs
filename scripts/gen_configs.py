import subprocess
import pathlib

from optuna_externm.config import OEConfig

import mkdocs_gen_files

print("Running script to generate automated config docs")


def get_subprocess_help(process, help="--help"):
    proc = subprocess.Popen(process + [help], stdout=subprocess.PIPE)
    proc.wait()
    return proc.stdout.read().decode()


# adjust output location to match simple mkdocs plugin
with mkdocs_gen_files.editor.FilesEditor.current() as FE:
    simple_build_dir = FE.config["plugins"]["simple"].build_docs_dir
    FE.directory = simple_build_dir
    with FE.open("cli/help_gc.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\noptuna-em gc --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["optuna-em", "gc"])),
            file=mdf,
        )

    with FE.open("cli/help_results.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\noptuna-em results --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["optuna-em", "results"])),
            file=mdf,
        )

    with FE.open("cli/help_opt.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\noptuna-em opt --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["optuna-em", "opt"])),
            file=mdf,
        )
        print("A default `CONFIG_FILE` can be generated by", file=mdf)
        print("```shell\noptuna-em gc opt\n```", file=mdf)

    with FE.open("cli/opt_config.yml", "w") as mdf:
        print("Writing to:", mdf.name)
        yml = OEConfig().yaml_desc(header=False, comments=False)
        mdf.write(yml)

    with FE.open("cli/help_sa.md", "w") as mdf:
        print("Writing to:", mdf.name)
        print("To see the help menu", file=mdf)
        print("```shell\noptuna-em sa --help\n```", file=mdf)
        print("Which has output:", file=mdf)
        print(
            "~~~shell\n{}\n~~~".format(get_subprocess_help(["optuna-em", "sa"])),
            file=mdf,
        )
        print("A default `CONFIG_FILE` can be generated by", file=mdf)
        print("```shell\noptuna-em gc sa\n```", file=mdf)

# print(FE.edit_paths)
# print(FE.directory)
