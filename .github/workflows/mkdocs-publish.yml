name: Publish docs via GitHub Pages

on: [push, pull_request]

env:
  PACKAGE: optuna-externm

jobs:

  mkdocs_build_test_deploy:

    name: build mkdocs
    runs-on: ubuntu-latest

    steps:

      - name: Checkout optuna-externm
        uses: actions/checkout@v3
        with:
          repository: trhallam/optuna-externm
          token: ${{ secrets.GH_PRIVATE_TOKEN }}
          path: optuna-externm

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'

      - name: Update PIP
        run: |
          python -m pip install --upgrade pip
          pip install pip_tools

      # required to use caching because it depends on requirements.txt
      - name: create requirements optuna-externm and install packages
        run: |
          cd optuna-externm
          pip-compile setup.cfg --extra docs
          pip install -r requirements.txt
          pip install .

      - name: Checkout optuna-hm
        uses: actions/checkout@v3
        with:
          repository: trhallam/optuna-hm
          token: ${{ secrets.GH_PRIVATE_TOKEN }}
          path: optuna-hm

      # required to use caching because it depends on requirements.txt
      - name: create requirements optuna-hm
        run: |
          cd optuna-hm
          mv setup.cfg setup.cfg.bu
          grep -v optuna-externm setup.cfg.bu > setup.cfg
          pip-compile setup.cfg
          pip install -r requirements.txt
          pip install .

      - name: Checkout main
        uses: actions/checkout@v3
        with:
          path: optuna-externm-docs

      - name: Install docs deps
        run: |
          cd optuna-externm-docs
          pip install -r requirements.txt

      - name: build docs
        run: |
          cd optuna-externm-docs
          mkdocs build -f mkdocs.yml

      - name: deploy mkdocs
        if: success() && github.event_name == 'push' && github.ref_name == 'main'
        run: |
          cd optuna-externm-docs
          mkdocs gh-deploy -f mkdocs.yml

  docs_badge:
    name: create docs badges
    if: always() && github.ref_name == 'main'
    needs: [mkdocs_build_test_deploy]
    runs-on: ubuntu-latest

    steps:
    - name: passed?
      if: needs.mkdocs_build_test_deploy.result == 'success'
      run: |
        echo "BADGE_COLOUR=green" >> $GITHUB_ENV
        echo "BADGE_MSG=pass" >> $GITHUB_ENV

    - name: failed?
      if: needs.mkdocs_build_test_deploy.result == 'failure'
      run: |
        echo "BADGE_COLOUR=red" >> $GITHUB_ENV
        echo "BADGE_MSG=fail" >> $GITHUB_ENV

    - name: create test badges
      if:
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.GIST_TOKEN }}
        gistID: 0da415ee1bf30b0fc37a2fc4ddafbdee
        filename: ${{ env.PACKAGE }}_docs.json
        label: Docs
        namedLogo: Read the Docs
        logoColor: white
        message: ${{ env.BADGE_MSG }}
        color: ${{ env.BADGE_COLOUR }}
